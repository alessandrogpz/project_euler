# https://projecteuler.net/problem=2

# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

def fib_calculator(fib_limit):

    fib_list = [1,1]
    n = 0
    sum_even_fib = 0

    while fib_list[n+1] < fib_limit:
        fib_list.append(fib_list[n]+fib_list[n+1])
        n += 1
        if fib_list[n+1] % 2 == 0:
            sum_even_fib += fib_list[n+1]
    return fib_list, sum_even_fib

fib_list, sum_even_fib = fib_calculator(4000000) 
print(fib_list)
print("sum of the even-valued terms:", sum_even_fib)

# -------------------------------------------------------
# Another way

a, b, var = 1, 2, 0
while True:
    if b % 2 == 0:
        var += b
    b += a
    a = b-a
    if b > 4000000:
        break
print("Alternative code:", var)